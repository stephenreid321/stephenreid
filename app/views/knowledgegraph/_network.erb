<script>
  function drawNetwork() {

  scale = chroma.scale(['#6D71C6', '#B16DC6']);

          node_min_width = 10
          node_min_color = 0.1
          node_color_scale = 75
          edge_min_color = 0.1
          edge_color_scale = 50
          edge_min_opacity = 0.1
          edge_opacity_scale = 50

          cy = cytoscape({

          container: $('#cy'),
                  elements: [
  <% terms.each { |term| %>
                    { data: {id: '<%= term.id %>', name: '<%= term['Name'] %>', weight: <%= w = term['Recent posts count'] %>, width: (node_min_width +<%= w %>), color: scale(node_min_color + (<%= w %> / node_color_scale)).hex()} },
  <% } %>
  <% term_links.each { |term_link| %>
                    {
                    data: {id: '<%= term_link['Autonumber'] %>', source: '<%= term_link['Source'].first %>', target: '<%= term_link['Sink'].first %>', weight: <%= w = term_link['Recent posts count'] %>, color: scale(edge_min_color + (<%= w %> / edge_color_scale)).hex(), opacity: (edge_min_opacity + (<%= w %> / edge_opacity_scale))}
                    },
  <% } %>
                  ],
                  style: [// the stylesheet for the graph
                  {
                  selector: 'node',
                          style: {
                                  'background-color': 'data(color)',
                                  'opacity': 0.75,
                                  'color': 'white',
                                  'label': 'data(name)',
                                  'width': 'data(width)',
                                  'height': 'data(width)'
                          }
                  },
                  {
                  selector: 'edge',
                          style: {
  //                  'width': 'data(weight)',
  <% if defined?(edge_labels) %> 'label': 'data(weight)', <% end %>
                                  'opacity': 'data(opacity)',
                                  'line-color': 'data(color)',
                          }
                  }
                  ],
                  layout: {
                  name: 'cola',
                          // infinite: true,
                          nodeSpacing: function(node){ return 40; },
                  }

          });
  cy.on('tap', 'node', function(){
  window.location.href = '/terms/' + this.data('name');
  });
  cy.on('tap', 'edge', function(){
  window.location.href = '/terms/' + this.data('source') + '/' + this.data('target');
  });
  // cy.$('[weight < 4]').hide()
  cy.minZoom(0.5)

  // function animate() {
  //   cy.nodes().each(function(ele) {
  //     ele.stop()
  //     cy.nodes().each(function(ele) {
  //       ele.animate({
  //         style: {
  //           'background-color': chroma(ele.data().color).darken().hex()
  //         },
  //         duration: 2000,
  //         complete: function() {
  //           cy.nodes().animate({
  //             style: {
  //               'background-color': ele.data().color
  //             },
  //             duration: 2000,
  //             complete: ani
  //           })
  //         }
  //       })
  //     })
  //   })
  // }
  // animate()

  }

  $(function() {
  drawNetwork()
          $(window).one('focus', function() { drawNetwork() })
  })
</script>
<div id="cy" class="card shadow-sm" style="height: 500px"></div>
