<% proposed_with_multipliers = JSON.parse(Stash.find_by(key: 'proposed_with_multipliers').value) %>
<% proposed_without_multipliers = JSON.parse(Stash.find_by(key: 'proposed_without_multipliers').value) %>
<% actual = Hash[JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/structure'))['values'].map { |h| [h['assetTicker'], h['targetWeight']] }] %>
<% rebalanced = Hash[JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/structure'))['values'].map { |h| [h['assetTicker'], h['rebalancedWeight']] }] %>
<% diff = Hash[actual.map { |k, _v| [k, actual[k] - rebalanced[k]] }] %>
<% y = 50_000 %>

<style>
  @media(min-width: 768px) {
  td.assetName { width: 1px;  padding-left: 0; padding-right: 0;}
  #assets th { border-top: none }
  }
</style>
<script>
  $(function () {
      $('#assets').dataTable({info: false, paging: false, searching: false, order: [[4, "desc"]]})
  })
</script>

<div class="row align-items-center">
  <div class="col-lg-8">
    <table id="assets" class="table" style="font-size: 0.9rem; border-collapse: collapse !important">
      <thead>
        <tr>
          <th></th>
          <th>Asset</th>
          <th></th>
          <th style="width: 8em">Current weight</th>
          <th style="width: 8em">With multipliers<br/>
            (next rebalance)</th>
          <th style="width: 8em">Without multipliers</th>
        </tr>
      </thead>
      <% tickers = (proposed_with_multipliers.keys + proposed_without_multipliers.keys + actual.keys + Asset.and(:multiplier.ne => nil).order('multiplier desc').pluck(:ticker)) %>
      <% tickers.uniq.each { |k| %>
      <% asset = Asset.find_by(ticker: k) %>
      <tr>
        <td style="vertical-align: middle; text-align: right; width: 10vw">
          <% if actual[k] %>
            <% if diff[k] < 0 %>
              <div class="d-none d-lg-inline-block" style="position:relative; top: 0.2rem; height: 1rem; background: <%= if diff[k].positive?
                                                                                                                       'green'
                                                                                                                     elsif diff[k].negative?
                                                                                                                       'red'
                                                                                                                     end %>; width: <%= "#{100 * -diff[k] / diff.values.map(&:abs).max}%" %>"></div>
            <% end %>
          <% end %>
        </td>
        <td class="assetName" style="white-space: nowrap;">
          <a
      data-toggle="tooltip"
<% if coin = Coin.find_by(symbol: asset.ticker) %>
      title="$<%= coin.usd_price
      if coin.usd_price < 1
      Float("%.#{3}g" % coin.usd_price)
      else
      number_with_precision coin.usd_price, precision: 2, delimiter: ','
      end

      %><br />Updated <%=time_ago_in_words coin.updated_at%> ago"
<% end %>

      target="_blank" href="https://coingecko.com/en/coins/<%=coin.slug%>">
            <%= asset.name %> (<%= k %>)
          </a>
          <%= partial :'crypto/multiplier', locals: { asset: asset } %>
        </td>
        <td style="vertical-align: middle; width: 10vw">
          <% if actual[k] %>
            <% if diff[k] > 0 %>
              <div class="d-none d-lg-inline-block" style="position:relative; top: 0.2rem; height: 1rem; background: <%= if diff[k].positive?
                                                                                                                       'green'
                                                                                                                     elsif diff[k].negative?
                                                                                                                       'red'
                                                                                                                     end %>; width: <%= "#{100 * diff[k] / diff.values.map(&:abs).max}%" %>"></div>
            <% end %>
          <% end %>
        </td>
        <td data-sort="<%= actual[k] || 0 %>" style="white-space: nowrap;">
          <% if actual[k] %>
            <%= number_to_percentage (actual[k] * 100), precision: 1 %>
            <small>
              <span style="color: <%= if diff[k].positive?
                                    'green'
                                  elsif diff[k].negative?
                                    'red'
                                  end %>">
                <%= '+' if diff[k].positive? %><%= (diff[k] * 10_000).round %>
              </span>
            </small>
          <% end %>
        </td>
        <td data-sort="<%= proposed_with_multipliers[k] || 0 %>" style="white-space: nowrap;">
          <% if proposed_with_multipliers[k] %>
            <%= number_to_percentage (proposed_with_multipliers[k] * 100), precision: 1 %>
          <% end %>
        </td>
        <td data-sort="<%= proposed_without_multipliers[k] || 0 %>" style="white-space: nowrap;">
          <% if proposed_without_multipliers[k] %>
            <%= number_to_percentage (proposed_without_multipliers[k] * 100), precision: 1 %>
          <% end %>
        </td>
      </tr>
      <% } %>
    </table>
  </div>
  <div class="col-lg-4">
    <%= partial :'crypto/strategy_chart', locals: { actual: actual } %>
  </div>
</div>
